name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install rye
        uses: eifinger/setup-rye@v4
        with:
          version: "latest"

      - name: Install dependencies
        run: rye sync

      - name: Run pre-commit
        run: rye run pre-commit run --all-files

  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Install rye
        uses: eifinger/setup-rye@v4
        with:
          version: "latest"

      - name: Set up Python ${{ matrix.python-version }}
        run: rye pin ${{ matrix.python-version }}

      - name: Install dependencies
        run: rye sync

      - name: Run tests
        env:
          TEST_SPEC_PATH: /tmp/fake_spec
        run: |
          mkdir -p /tmp/fake_spec/bin
          touch /tmp/fake_spec/bin/runcpu
          chmod +x /tmp/fake_spec/bin/runcpu
          rye run pytest --cov --cov-report=xml --cov-report=term-missing

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        if: matrix.python-version == '3.11'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: true

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install rye
        uses: eifinger/setup-rye@v4
        with:
          version: "latest"

      - name: Install dependencies
        run: rye sync

      - name: Run security checks
        run: |
          rye run bandit -r src/
          rye run safety check

  build:
    runs-on: ubuntu-latest
    needs: [lint, test, security]
    steps:
      - uses: actions/checkout@v4

      - name: Install rye
        uses: eifinger/setup-rye@v4
        with:
          version: "latest"

      - name: Install dependencies
        run: rye sync

      - name: Build package
        run: rye build

      - name: Check package
        run: rye run twine check dist/*

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  release:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    permissions:
      id-token: write  # For PyPI trusted publishing
    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
